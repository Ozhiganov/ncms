<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ru.nsu.legacy.NSULegacyRS">
    <update id="mergeNewPage"
            databaseId="DB2"
            parameterType="map">
        MERGE INTO ASMS a
        USING (
                  VALUES (#{guid}, #{name}, #{type},
                          #{nav_parent_id,jdbcType=BIGINT},
                          #{nav_cached_path},
                          #{options,jdbcType=VARCHAR},
                          CURRENT_TIMESTAMP, #{user}, #{user},
                          #{description},
                          #{recursive_acl},
                          #{cdate,jdbcType=TIMESTAMP},
                          #{nav_alias2},
                          #{published}
                  )) AS s(
              name, hname, type,
              nav_parent_id,
              nav_cached_path,
              options,
              mdate, muser, owner,
              description,
              recursive_acl_id,
              cdate,
              nav_alias2,
              published
              )
        ON a.name = s.name
        WHEN MATCHED THEN
        UPDATE SET
            a.hname            = s.hname,
            a.type             = s.type,
            a.nav_parent_id    = s.nav_parent_id,
            a.nav_cached_path  = s.nav_cached_path,
            a.options          = s.options,
            a.mdate            = s.mdate,
            a.muser            = s.muser,
            a.owner            = s.owner,
            a.description      = s.description,
            a.recursive_acl_id = s.recursive_acl_id,
            a.cdate            = s.cdate,
            a.nav_alias2       = s.nav_alias2,
            a.published        = s.published
        WHEN NOT MATCHED THEN
        INSERT (name, hname, type,
                nav_parent_id,
                nav_cached_path,
                options,
                mdate, muser, owner,
                description,
                recursive_acl_id,
                cdate,
                nav_alias2,
                published,
                ordinal)
        VALUES (s.name, s.hname, s.type,
                s.nav_parent_id,
                s.nav_cached_path,
                s.options,
                s.mdate, s.muser, s.owner,
                s.description,
                s.recursive_acl_id,
                #{cdate,jdbcType=TIMESTAMP},
                #{nav_alias2,jdbcType=VARCHAR},
                #{published},
                SEQ_ASMS_ORDINAL.NEXTVAL)
    </update>


    <update id="upsertAttribute"
            databaseId="DB2"
            parameterType="com.softmotions.ncms.asm.AsmAttribute">
        MERGE INTO ASM_ATTRS a
        USING (
        VALUES (#{asmId}, #{name}, #{label}, #{type},
        #{options}, #{required}, #{value}, #{largeValue}, CURRENT_TIMESTAMP)
        ) AS s(
        asm_id, name, label, type,
        options, required, value, large_value, mdate
        )
        ON a.asm_id = s.asm_id AND a.name = s.name
        WHEN MATCHED THEN
        UPDATE SET
        a.label       = s.label,
        a.type        = s.type,
        a.options     = s.options,
        a.required    = s.required,
        a.value       = s.value,
        a.large_value = s.large_value,
        a.mdate       = s.mdate
        WHEN NOT MATCHED THEN
        INSERT (id, asm_id, name, label, type,
        options, required, value, large_value, mdate)
        VALUES (SEQ_ATTR_ID.NEXTVAL, s.asm_id, s.name, s.label, s.type,
        s.options, s.required, s.value, s.large_value, s.mdate)
    </update>


    <select id="prevAttrID"
            databaseId="DB2"
            resultType="long">
        SELECT
        PREVIOUS VALUE FOR SEQ_ATTR_ID
        FROM SYSIBM.DUAL
    </select>



    <select id="asmByLegacyGUID" parameterType="string" resultType="map">
        SELECT
            asm.id   AS "id",
            asm.name AS "name"
        FROM ASM_SYSPROPS p
            INNER JOIN ASMS asm ON asm.id = p.asm_id
        WHERE
            p.value = #{guid}
            AND p.property = 'nsu.legacy.guid'
    </select>


    <select id="asmByNavAlias2" parameterType="string" resultType="map">
        SELECT
            asm.id   AS "id",
            asm.name AS "name"
         FROM ASMS asm
        WHERE nav_alias2 = #{alias}
    </select>



</mapper>