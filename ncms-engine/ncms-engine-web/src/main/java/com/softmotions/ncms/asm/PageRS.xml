<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.softmotions.ncms.asm.PageRS">

    <select id="selectChildLayer" resultType="map" parameterType="map">
        SELECT
            p.id          AS "id",
            p.name        AS "guid",
            p.hname       AS "name",
            p.description AS "description",
            p.type        AS "type",
            p.published   AS "published",
            p.template    AS "template"
        FROM ASMS AS p
        WHERE p.nav_parent_id = #{nav_parent_id}
              AND p.type LIKE 'page%'
        ORDER BY p.hname ASC
    </select>


    <select id="selectRootLayer" resultType="map" parameterType="map">
        SELECT
            p.id          AS "id",
            p.name        AS "guid",
            p.hname       AS "name",
            p.description AS "description",
            p.type        AS "type",
            p.published   AS "published",
            p.template    AS "template"
        FROM ASMS AS p
        WHERE p.nav_parent_id IS NULL
              AND p.type LIKE 'page%'
        ORDER BY p.hname ASC
    </select>

    <select id="selectParentID" resultType="long" parameterType="long">
        SELECT
            nav_parent_id
        FROM ASMS
        WHERE id = #{id}
    </select>


    <update id="mergeNewPage" parameterType="map">
        MERGE INTO ASMS (name, hname, type,
                         nav_parent_id,
                         nav_cached_path,
                         options,
                         mdate, muser, owner,
                         recursive_acl_id)
        KEY (name)
        VALUES (#{guid}, #{name}, #{type},
                #{nav_parent_id,jdbcType=BIGINT},
                #{nav_cached_path},
                #{options,jdbcType=VARCHAR},
                now(), #{user}, #{user},
                #{recursive_acl})
    </update>

    <delete id="dropPage" parameterType="map">
        DELETE
        FROM asms
        WHERE id = #{id}
    </delete>


    <update id="setPageOwner" parameterType="map">
        UPDATE asms
        SET owner = #{owner}
        WHERE id = #{id}
    </update>


    <select id="selectPageInfo" resultType="map" parameterType="map">
        SELECT
            p.id        AS "id",
            p.hname     AS "name",
            p.name      AS "guid",
            p.type      AS "type",
            p.mdate     AS "mdate",
            p.muser     AS "muser",
            p.owner     AS "owner",
            p.published AS "published",
            p.template  AS "template",
            p.options   AS "options"
        FROM ASMS AS p
        WHERE p.id = #{id}
              AND p.type LIKE 'page%'
    </select>

    <select id="selectPageTemplateStatus" resultType="int" parameterType="long">
        SELECT
            p.template
        FROM ASMS AS p
        WHERE p.id = #{id}
    </select>


    <update id="updateAttribute"
            parameterType="com.softmotions.ncms.asm.AsmAttribute">
        UPDATE asm_attrs
        SET
            options     = #{options},
            value       = #{value},
            large_value = #{largeValue}
        WHERE asm_id = #{asmId}
              AND name = #{name}
    </update>

    <update id="upsertAttribute"
            parameterType="com.softmotions.ncms.asm.AsmAttribute">
        MERGE INTO asm_attrs (asm_id, name, label, type,
                              options, required, value, large_value)
        KEY (asm_id, name)
        VALUES (#{asmId}, #{name}, #{label}, #{type},
                #{options}, #{required}, #{value}, #{largeValue})
    </update>


    <delete id="deleteAttrsByNames"
            parameterType="map">
        DELETE FROM asm_attrs
        WHERE asm_id = #{asmId}
        AND name IN
        <foreach item="name" index="index" collection="names"
                 open="(" separator="," close=")">
            #{name}
        </foreach>
    </delete>

    <select id="selectAclUserRights" resultType="map" parameterType="map">
        SELECT
          0       AS "recursive",
          user    AS "user",
          rights  AS "rights"
        FROM asm_acl_entity
        WHERE acl_id = (SELECT local_acl_id FROM asms WHERE id = #{pid})
        UNION
        SELECT
          1       AS "recursive",
          user    AS "user",
          rights  AS "rights"
        FROM asm_acl_entity
        WHERE acl_id = (SELECT recursive_acl_id FROM asms WHERE id = #{pid})
    </select>

    <select id="selectPageAclInfo" resultType="map" parameterType="map">
        SELECT
          owner             AS "owner",
          local_acl_id      AS "local_acl",
          recursive_acl_id  AS "recursive_acl"
        FROM asms
        WHERE id = #{pid}
    </select>

    <select id="newAclId" resultType="long">
        CALL NEXT VALUE FOR SEQ_ACL_ID
    </select>

    <update id="setLocalAcl" parameterType="map">
        UPDATE asms
        SET local_acl_id = #{acl}
        WHERE id = #{pid}
    </update>

    <update id="setRecursiveAcl" parameterType="map">
        UPDATE asms
        SET recursive_acl_id = #{acl}
        WHERE id = #{pid}
    </update>

    <update id="updateAclUserRights" parameterType="map">
        MERGE INTO asm_acl_entity (acl_id, user, rights)
        KEY (acl_id, user)
        VALUES (#{acl}, #{user}, #{rights})
    </update>

    <select id="checkUserInAcl" resultType="int" parameterType="map">
        SELECT COUNT(*)
        FROM asm_acl_entity
        WHERE
          user = #{user}
          AND acl_id IN
        <foreach item="aid" collection="aids" open="(" separator="," close=")">
            #{aid}
        </foreach>
    </select>

    <update id="deleteAclUser" parameterType="map">
        DELETE FROM asm_acl_entity
        WHERE user = #{user} AND acl_id = #{acl}
    </update>

    <update id="copyAcl" parameterType="map">
        INSERT INTO asm_acl_entity (acl_id, user, rights)
        SELECT #{new_acl}, user, rights FROM asm_acl_entity WHERE acl_id = #{prev_acl}
    </update>

    <select id="selectNavPagePath" resultType="string" parameterType="map">
        SELECT nav_cached_path
        FROM asms
        WHERE id = #{pid}
    </select>

    <select id="selectUserRights" resultType="string" parameterType="map">
        SELECT rights
        FROM asm_acl_entity
        WHERE user = #{user} AND acl_id = #{acl}
    </select>

    <update id="updateChildRecursiveAcl" parameterType="map">
        UPDATE asms
        SET recursive_acl_id = #{new_acl}
        WHERE
          (<if test="prev_acl != null">recursive_acl_id = #{prev_acl} OR </if> recursive_acl_id IS NULL)
          AND
          (nav_cached_path LIKE #{nav_path} <if test="pid != null"> OR id = #{pid}</if>)
    </update>

    <update id="updateChildRecursiveAcl2" parameterType="map">
        MERGE INTO asm_acl_entity (acl_id, user, rights)
        KEY (acl_id, user)
          SELECT recursive_acl_id, #{user}, #{rights}
          FROM asms
            WHERE
              (recursive_acl_id IS NOT NULL AND recursive_acl_id != #{acl})
              AND nav_cached_path LIKE #{nav_path}
    </update>

    <update id="updateParentRecursiveAcl" parameterType="map">
        UPDATE asms
        SET recursive_acl_id = #{new_acl}
        WHERE recursive_acl_id = #{prev_acl} AND #{nav_path} LIKE (nav_cached_path || id || '/%')
    </update>

    <update id="updateUserAcl" parameterType="map">
        UPDATE asm_acl_entity
        SET acl_id = #{new_acl}
        WHERE acl_id = #{prev_acl} AND user = #{user}
    </update>

    <select id="parentAcls" resultType="map" parameterType="map">
        SELECT
          id                AS "id",
          local_acl_id      AS "local_acl",
          recursive_acl_id  AS "recursive_acl"
        FROM asms
        WHERE #{nav_path} LIKE (nav_cached_path || id || '/%')
        ORDER BY nav_cached_path DESC
    </select>

    <select id="childRecursiveAcls" resultType="long" parameterType="map">
        SELECT recursive_acl_id
        FROM asms
        WHERE recursive_acl_id != #{exclude_acl} AND nav_cached_path LIKE #{nav_path}
    </select>

    <select id="getRecursiveAcl" resultType="long" parameterType="map">
        SELECT recursive_acl_id
        FROM asms
        WHERE id = #{pid}
    </select>

</mapper>