<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.softmotions.ncms.asm.PageRS">

    <select id="selectChildLayer" resultType="map" parameterType="map">
        SELECT
            p.id          AS "id",
            p.name        AS "guid",
            p.hname       AS "name",
            p.description AS "description",
            p.type        AS "type",
            p.published   AS "published",
            p.template    AS "template"
        FROM ASMS AS p
        WHERE p.nav_parent_id = #{nav_parent_id}
              AND p.type LIKE 'page%'
        ORDER BY p.hname ASC
    </select>


    <select id="selectRootLayer" resultType="map" parameterType="map">
        SELECT
            p.id          AS "id",
            p.name        AS "guid",
            p.hname       AS "name",
            p.description AS "description",
            p.type        AS "type",
            p.published   AS "published",
            p.template    AS "template"
        FROM ASMS AS p
        WHERE p.nav_parent_id IS NULL
              AND p.type LIKE 'page%'
        ORDER BY p.hname ASC
    </select>

    <select id="selectParentID" resultType="long" parameterType="long">
        SELECT
            nav_parent_id
        FROM ASMS
        WHERE id = #{id}
    </select>


    <update id="mergeNewPage" parameterType="map">
        MERGE INTO ASMS (name, hname, type,
                         nav_parent_id,
                         nav_cached_path,
                         options,
                         mdate, muser, owner)
        KEY (name)
        VALUES (#{guid}, #{name}, #{type},
                #{nav_parent_id,jdbcType=BIGINT},
                #{nav_cached_path},
                #{options,jdbcType=VARCHAR},
                now(), #{user}, #{user})
    </update>

    <delete id="dropPage" parameterType="map">
        DELETE
        FROM asms
        WHERE id = #{id}
    </delete>


    <update id="setPageOwner" parameterType="map">
        UPDATE asms
        SET owner = #{owner}
        WHERE id = #{id}
    </update>


    <select id="selectPageInfo" resultType="map" parameterType="map">
        SELECT
            p.id        AS "id",
            p.hname     AS "name",
            p.name      AS "guid",
            p.type      AS "type",
            p.mdate     AS "mdate",
            p.muser     AS "muser",
            p.owner     AS "owner",
            p.published AS "published",
            p.template  AS "template",
            p.options   AS "options"
        FROM ASMS AS p
        WHERE p.id = #{id}
              AND p.type LIKE 'page%'
    </select>

    <select id="selectPageTemplateStatus" resultType="int" parameterType="long">
        SELECT
            p.template
        FROM ASMS AS p
        WHERE p.id = #{id}
    </select>


    <update id="updateAttribute"
            parameterType="com.softmotions.ncms.asm.AsmAttribute">
        UPDATE asm_attrs
        SET
            options     = #{options},
            value       = #{value},
            large_value = #{largeValue}
        WHERE asm_id = #{asmId}
              AND name = #{name}
    </update>

    <update id="upsertAttribute"
            parameterType="com.softmotions.ncms.asm.AsmAttribute">
        MERGE INTO asm_attrs (asm_id, name, label, type,
                              options, required, value, large_value)
        KEY (asm_id, name)
        VALUES (#{asmId}, #{name}, #{label}, #{type},
                #{options}, #{required}, #{value}, #{largeValue})
    </update>


    <delete id="deleteAttrsByNames"
            parameterType="map">
        DELETE FROM asm_attrs
        WHERE asm_id = #{asmId}
        AND name IN
        <foreach item="name" index="index" collection="names"
                 open="(" separator="," close=")">
            #{name}
        </foreach>
    </delete>

    <select id="selectAclUserRights" resultType="map" parameterType="map">
        SELECT
          0       AS "recursive",
          user    AS "user",
          rights  AS "rights"
        FROM asm_acl_entity
        WHERE acl_id = (SELECT local_acl_id FROM asms WHERE id = #{id})
        UNION
        SELECT
          1       AS "recursive",
          user    AS "user",
          rights  AS "rights"
        FROM asm_acl_entity
        WHERE acl_id = (SELECT recursive_acl_id FROM asms WHERE id = #{id})
    </select>

    <select id="selectAclIds" resultType="map" parameterType="map">
        SELECT
          local_acl_id      AS "local_acl",
          recursive_acl_id  AS "recursive_acl"
        FROM asms
        WHERE id = #{id}
    </select>

    <select id="newAclId" resultType="long">
        CALL NEXT VALUE FOR SEQ_ACL_ID
    </select>

    <update id="setLocalAcl" parameterType="map">
        UPDATE asms
        SET local_acl_id = #{acl}
        WHERE id = #{id}
    </update>

    <update id="updateAclUserRights" parameterType="map">
        MERGE INTO asm_acl_entity (acl_id, user, rights)
        KEY (acl_id, user)
        VALUES (#{acl}, #{user}, #{rights})
    </update>
</mapper>