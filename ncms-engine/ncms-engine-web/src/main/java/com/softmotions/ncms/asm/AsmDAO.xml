<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.softmotions.ncms.asm.AsmDAO">

    <!--<cache type="com.softmotions.ncms.db.MBDebugCache"/>-->

    <insert id="coreInsert" parameterType="com.softmotions.ncms.asm.AsmCore"
            keyProperty="id" useGeneratedKeys="true">
        insert into asm_cores
        (location, name, template_engine)
        values (#{location}, #{name}, #{templateEngine})
    </insert>

    <update id="coreUpdate" parameterType="com.softmotions.ncms.asm.AsmCore"
            keyProperty="id">
        update asm_cores
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="location != null">location = #{location},</if>
            <if test="templateEngine != null">template_engine = #{templateEngine}</if>
        </set>
        where id = #{id}
    </update>

    <delete id="coreDelete">
        delete
        from asm_cores
        <where>
            <if test="id != null">#{id}</if>
            <if test="location != null">#{location}</if>
        </where>
    </delete>

    <select id="selectAsmCore"
            resultType="com.softmotions.ncms.asm.AsmCore"
            resultMap="coreRM">
        select *
        from asm_cores
        <where>
            <if test="id != null">id = #{id}</if>
            <if test="location != null">and location = #{location}</if>
            <if test="name != null">and name = #{name}</if>
            <if test="templateEngine != null">and template_engine = #{templateEngine}</if>
        </where>
    </select>

    <insert id="asmInsert" parameterType="com.softmotions.ncms.asm.Asm"
            keyProperty="id" useGeneratedKeys="true">
        insert into asms
        (name, type, description<if test="core != null">, asm_core_id</if>)
        values (#{name}, #{type}, #{description}<if test="core != null">, #{core.id}</if>)
    </insert>

    <update id="asmUpdate"
            parameterType="com.softmotions.ncms.asm.Asm"
            keyProperty="id">
        update asms
        <set>
            <if test="name != null">name = #{name},</if>
            <if test="type != null">type = #{type},</if>
            <if test="description != null">description = #{description},</if>
            <if test="core != null">asm_core_id = #{core.id,jdbcType=BIGINT}</if>
        </set>
        where id = #{id}
    </update>


    <update id="asmUpdateCore"
            parameterType="map">
        update asms
        set asm_core_id = #{coreId,jdbcType=BIGINT}
        where id = #{id}
    </update>

    <select id="selectAsmByCriteria"
            resultType="com.softmotions.ncms.asm.Asm"
            parameterType="java.util.Map"
            resultMap="asmFullRM"
            useCache="true">
        select asm.*,
        attr.asm_id as attr_asm_id,
        attr.name as attr_name,
        attr.type as attr_type,
        attr.options as attr_options,
        attr.value as attr_value,
        attr.large_value as attr_large_value,
        core.id as core_id,
        core.location as core_location,
        core.name as core_name,
        core.template_engine as core_template_engine
        from asms as asm
        left outer join asm_attrs attr on attr.asm_id = asm.id
        left outer join asm_cores core on core.id = asm.asm_core_id
        <where>
            <if test="CQ_PK != null">asm.id = #{CQ_PK}</if>
            <if test="id != null">asm.id = #{id}</if>
            <if test="name != null">asm.name = #{name}</if>
            <if test="type != null">and asm.type = #{type}</if>
            <if test="location != null">and core.location = #{location}</if>
        </where>
        <if test="CQ_ORDERBY">order by ${CQ_ORDERBY}</if>
        <if test="CQ_LIMIT">
            limit ${CQ_LIMIT}
            <if test="CQ_OFFSET">
                offset ${CQ_OFFSET}
            </if>
        </if>
    </select>


    <insert id="asmSetAttribute"
            parameterType="com.softmotions.ncms.asm.AsmAttribute">
        insert into asm_attrs
        (asm_id, name, type, value)
        values (#{asmId}, #{name}, #{type}, #{value})
    </insert>


    <select id="asmSelectAllPlain" resultType="com.softmotions.ncms.asm.Asm">
        select *
        from asms
        order by name asc
    </select>

    <update id="asmRename" parameterType="map">
        update asms
        set name = #{name}
        where id = #{id}
    </update>

    <!-- ======================= Nested selects =========================== -->

    <select id="selectAsmParents"
            resultType="com.softmotions.ncms.asm.Asm"
            resultMap="asmFullRM"
            parameterType="long">
        select asm.*,
        attr.asm_id as attr_asm_id,
        attr.name as attr_name,
        attr.type as attr_type,
        attr.options as attr_options,
        attr.value as attr_value,
        attr.large_value as attr_large_value,
        core.id as core_id,
        core.location as core_location,
        core.name as core_name,
        core.template_engine as core_template_engine
        from asm_parents as parent
        inner join asms asm on asm.id = parent.asm_parent_id
        left outer join asm_attrs attr on attr.asm_id = asm.id
        left outer join asm_cores core on core.id = asm.asm_core_id
        where parent.asm_id = #{id}
    </select>


    <!-- ======================== Misc ops ============================ -->

    <select id="asmHasSpecificParent"
            resultType="int"
            parameterType="map">
        select count(*)
        from asm_parents as p
        where p.asm_id = #{asmId}
        and p.asm_parent_id = #{parentId}
    </select>


    <select id="asmIDByName" parameterType="string" resultType="int">
        select id
        from asms
        where name = #{name}
    </select>

    <insert id="asmSetParent">
        insert into asm_parents
        (asm_id, asm_parent_id)
        values(#{asmId}, #{parentId})
    </insert>

    <delete id="asmRemoveParent">
        delete
        from asm_parents
        where asm_id = #{asmId} and asm_parent_id = #{parentId}
    </delete>

    <delete id="asmRemoveParentFromAll">
        delete
        from asm_parents
        where asm_parent_id = #{parentId}
    </delete>

    <delete id="asmRemove">
        delete
        from asms
        where id = #{id}
    </delete>

    <select id="attrByAsmAndName"
            resultType="com.softmotions.ncms.asm.AsmAttribute"
            resultMap="attrFullRM"
            parameterType="map">
        select attr.*
        from asm_attrs attr
        where attr.asm_id = #{asm_id}
        and attr.name = #{name}
    </select>


    <!-- ======================== Result maps ============================= -->

    <resultMap id="coreRM"
               type="com.softmotions.ncms.asm.AsmCore">
        <id property="id" column="ID"/>
    </resultMap>

    <resultMap id="attrPlainRM"
               type="com.softmotions.ncms.asm.AsmAttribute">
        <id property="name" column="NAME"/>
        <id property="asmId" column="ASM_ID"/>
    </resultMap>

    <resultMap id="attrFullRM"
               type="com.softmotions.ncms.asm.AsmAttribute"
               extends="attrPlainRM">
    </resultMap>

    <resultMap id="asmPlainRM"
               type="com.softmotions.ncms.asm.Asm">
        <constructor>
            <idArg column="ID" javaType="long"/>
            <arg column="NAME" javaType="string"/>
        </constructor>
    </resultMap>

    <resultMap id="asmFullRM"
               type="com.softmotions.ncms.asm.Asm"
               extends="asmPlainRM">
        <association property="core"
                     columnPrefix="CORE_"
                     resultMap="coreRM"
                />
        <collection property="attributes"
                    javaType="com.softmotions.ncms.asm.Asm$AttrsList"
                    ofType="com.softmotions.ncms.asm.AsmAttribute"
                    resultMap="attrFullRM"
                    columnPrefix="ATTR_"
                />
        <collection property="parents"
                    javaType="arraylist"
                    ofType="com.softmotions.ncms.asm.Asm"
                    select="selectAsmParents"
                    column="id"
                    fetchType="lazy"
                />
    </resultMap>
</mapper>