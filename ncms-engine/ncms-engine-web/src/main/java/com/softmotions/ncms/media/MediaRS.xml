<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.softmotions.ncms.media.MediaRS">

    <select id="selectEntityIdByPath" parameterType="map" resultType="long">
        select id
        from media_entity
        where folder = #{folder} and name = #{name}
    </select>

    <insert id="insertEntity" parameterType="map">
        insert into media_entity (
        folder, name, status, mdate,
        content_type, put_content_type, content_length,
        creator)
        values (
        #{folder}, #{name}, #{status}, now(),
        #{content_type}, #{put_content_type}, #{content_length},
        #{creator})
    </insert>

    <update id="updateEntity" parameterType="map">
        update media_entity
        set content_type = #{content_type},
        content_length = #{content_length},
        creator = #{creator},
        icon = null,
        icon_content_type = null,
        mdate = now()
        where id = #{id}
    </update>

    <update id="fixResourceLocation" parameterType="map">
        update media_entity e
        set e.folder = #{nfolder},
        e.name = #{nname},
        mdate = now()
        where e.folder = #{folder}
        and e.name = #{name}
    </update>

    <update id="fixFolderName" parameterType="map">
        update media_entity e
        set e.folder = #{new_prefix} || substring(e.folder, #{prefix_like_len}),
        e.mdate = now()
        where e.folder like #{prefix_like}
    </update>

    <delete id="deleteFolder" parameterType="map">
        delete from media_entity e
        where e.folder like #{prefix_like}
    </delete>

    <delete id="deleteFile" parameterType="map">
        delete from media_entity e
        where e.folder = #{folder}
        and e.name = #{name}
    </delete>

    <select id="selectInFolder" parameterType="map" resultType="map">
        select e.*
        from media_entity as e
        where e.folder = #{folder}
        order by e.status desc, e.name asc
    </select>

    <select id="select" resultType="map" parameterType="map">
        select
        e.id as "id",
        e.name as "name",
        e.status as "status",
        e.content_type as "content_type",
        e.content_length as "content_length",
        e.folder as "folder",
        e.creator as "creator",
        e.description as "description",
        e.tags as "tags"
        from media_entity e
        <where>
            <if test="folder != null">and e.folder like #{folder}</if>
            <if test="name != null">and lower(e.name) like #{name}</if>
            <if test="status != null">and e.status = #{status}</if>
        </where>
        <if test="CQ_ORDERBY">order by ${CQ_ORDERBY}</if>
        <if test="CQ_LIMIT">
            limit ${CQ_LIMIT}
            <if test="CQ_OFFSET">
                offset ${CQ_OFFSET}
            </if>
        </if>
    </select>

    <select id="count" resultType="int" parameterType="map">
        select
        count(*)
        from media_entity e
        <where>
            <if test="folder != null">and e.folder like #{folder}</if>
            <if test="name != null">and lower(e.name) like #{name}</if>
            <if test="status != null">and e.status = #{status}</if>
        </where>
    </select>


    <select id="selectByPath" resultType="map" parameterType="map">
        select
        e.id as "id",
        e.name as "name",
        e.status as "status",
        e.content_type as "content_type",
        e.content_length as "content_length",
        e.folder as "folder",
        e.creator as "creator",
        e.description as "description"
        from media_entity e
        where
        e.folder = #{folder}
        and e.name = #{name}
    </select>


    <select id="selectIcon" resultType="map" parameterType="map">
        select
        e.id as "id",
        e.icon as "icon",
        e.content_type as "content_type",
        e.icon_content_type as "icon_content_type"
        from media_entity e
        where
        e.folder = #{folder}
        and e.name = #{name}
        and e.status = 0
    </select>

    <select id="selectIcon2" resultType="map" parameterType="map">
        select
        e.id as "id",
        e.folder as "folder",
        e.name as "name",
        e.icon as "icon",
        e.content_type as "content_type",
        e.icon_content_type as "icon_content_type"
        from media_entity e
        where
        e.id = #{id}
    </select>


    <update id="updateIcon" parameterType="map">
        update media_entity
        set
        icon = #{icon,jdbcType=BLOB},
        icon_content_type = #{icon_content_type}
        where id = #{id}
    </update>

    <update id="updateMeta" parameterType="map">
        update media_entity
        <set>
            <if test="tags != null">tags = #{tags,jdbcType=ARRAY},</if>
            <if test="description != null">description = #{description},</if>
        </set>
        where id = #{id}
    </update>

</mapper>