<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.softmotions.ncms.asm.AsmRS">

    <select id="select" resultType="map" parameterType="map">
        SELECT
        asm.id AS "id",
        asm.name AS "name",
        asm.hname AS "hname",
        asm.description AS "description",
        asm.type AS "type",
        asm.published AS "published",
        asm.template AS "template"
        FROM asms asm
        <where>
            <if test="type != null">AND asm.type = #{type}</if>
            <if test="name != null">AND (asm.name LIKE #{name} OR asm.description LIKE #{name})</if>
            <if test="template != null">AND asm.template = #{template}</if>
            <if test="template_mode != null">AND asm.template_mode = #{template_mode}</if>
            <if test="exclude != null">AND asm.id != #{exclude}</if>
        </where>
        <if test="CQ_ORDERBY">ORDER BY ${CQ_ORDERBY}</if>
    </select>

    <select id="count" resultType="int" parameterType="map">
        SELECT COUNT(*) FROM asms AS asm
        <where>
            <if test="type != null">AND asm.type = #{type}</if>
            <if test="name != null">AND (asm.name LIKE #{name} OR asm.description LIKE #{name})</if>
            <if test="template != null">AND asm.template = #{template}</if>
            <if test="template_mode != null">AND asm.template_mode = #{template_mode}</if>
            <if test="exclude != null">AND asm.id != #{exclude}</if>
        </where>
    </select>

    <select id="selectAttrByName"
            parameterType="map"
            resultType="com.softmotions.ncms.asm.AsmAttribute">
        SELECT
            attr.*
        FROM asm_attrs attr
        WHERE attr.asm_id = #{asm_id}
              AND attr.name = #{name}
    </select>

    <update id="renameAttribute"
            parameterType="map">
        UPDATE asm_attrs
        SET name = #{new_name}
        WHERE name = #{old_name}
              AND asm_id = #{asm_id}
    </update>


    <update id="renameAttributeChilds"
            parameterType="map">
        UPDATE asm_attrs
        SET name = #{new_name}
        WHERE name = #{old_name}
              AND asm_id IN (SELECT
                                 asm_id
                             FROM asm_parents
                             WHERE asm_parent_id = #{parent_id})
    </update>


    <select id="selectNotEmptyChilds"
            parameterType="map"
            resultType="long">
        SELECT
            DISTINCT
            p2.asm_parent_id
        FROM asm_parents AS p1
            INNER JOIN asm_parents p2 ON p2.asm_parent_id = p1.asm_id
        WHERE p1.asm_parent_id = #{parent_id}
    </select>


    <delete id="deleteAttribute"
            parameterType="map">
        DELETE FROM asm_attrs
        WHERE name = #{name}
              AND asm_id = #{asm_id}
    </delete>


    <delete id="deleteAttributeFromChilds"
            parameterType="map">
        DELETE FROM asm_attrs
        WHERE
            name = #{name}
            AND asm_id IN (
                SELECT
                    ap.asm_id
                FROM asm_parents AS ap
                WHERE ap.asm_parent_id = #{parent_id}
            )
    </delete>


    <insert id="insertAttribute"
            parameterType="com.softmotions.ncms.asm.AsmAttribute">
        INSERT INTO asm_attrs
        (id, asm_id, name, label, type, options, required, value, large_value, mdate)
        VALUES (NEXT VALUE FOR SEQ_ATTR_ID, #{asmId}, #{name}, #{label}, #{type}, #{options}, #{required}, #{value}, #{largeValue}, now())
    </insert>


    <update id="updateAttribute"
            parameterType="com.softmotions.ncms.asm.AsmAttribute">
        UPDATE asm_attrs
        SET
            label       = #{label},
            type        = #{type},
            options     = #{options},
            value       = #{value},
            large_value = #{largeValue},
            required    = #{required}
        WHERE asm_id = #{asmId}
              AND name = #{name}
    </update>


    <update id="upsertAttribute"
            databaseId="H2"
            parameterType="com.softmotions.ncms.asm.AsmAttribute">
        MERGE INTO asm_attrs (id, asm_id, NAME, LABEL, TYPE, OPTIONS, required, VALUE, large_value, mdate)
        KEY (asm_id, NAME)
        VALUES (NEXT VALUE FOR SEQ_ATTR_ID, #{asmId}, #{name}, #{label}, #{type}, #{options}, #{required}, #{value}, #{largeValue}, now())
    </update>


    <update id="upsertAttribute"
            databaseId="DB2"
            parameterType="com.softmotions.ncms.asm.AsmAttribute">
        MERGE INTO asm_attrs a
        USING (
                  VALUES (#{asmId}, #{name}, #{label}, #{type}, #{options},
                          #{required}, #{value}, #{largeValue}, current_timestamp)
              ) AS s(asm_id, name, label, type, options, required, value, large_value, mdate)
        ON a.asm_id = s.asm_id AND a.name = s.name
        WHEN MATCHED THEN
        UPDATE SET
            a.label = s.label, a.type = s.type, a.options = s.options, a.required = s.required,
            a.value = s.value, a.large_value = s.large_value, a.mdate = s.mdate
        WHEN NOT MATCHED THEN
        INSERT (id, asm_id, name, label, type, options, required, value, large_value, mdate)
        VALUES (NEXT VALUE FOR SEQ_ATTR_ID, s.asm_id, s.name, s.label, s.type, s.options, s.required, s.value, s.large_value, s.mdate)
    </update>

    <select id="prevAttrID"
            databaseId="DB2"
            resultType="long">
        SELECT
        PREVIOUS VALUE FOR SEQ_ATTR_ID
        FROM SYSIBM.DUAL
    </select>

    <update id="updateAssemblyProps"
            parameterType="map">
        UPDATE asms
        <set>
            <if test="template != null">template = #{template},</if>
            <if test="template_mode != null">template_mode = #{template_mode},</if>
            description = #{description},
            controller = #{controller},
        </set>
        WHERE id = #{id}
    </update>


    <update id="exchangeAttributesOrdinal"
            parameterType="map">
        UPDATE asm_attrs a1
        SET a1.ordinal = (SELECT
                              a2.ordinal
                          FROM asm_attrs a2
                          WHERE a2.ordinal IN (#{ordinal1}, #{ordinal2})
                                AND a1.ordinal != a2.ordinal),
            a1.mdate   = current_timestamp
        WHERE a1.ordinal IN (#{ordinal1}, #{ordinal2})
    </update>

    <select id="selectAsmIdByOrdinal"
            parameterType="long"
            resultType="long">
        SELECT asm_id FROM asm_attrs WHERE ordinal = #{ordinal}
    </select>


    <select id="selectAsmType" resultType="string" parameterType="long">
        SELECT
            a.type
        FROM asms a
        WHERE a.id = #{id}
    </select>


</mapper>