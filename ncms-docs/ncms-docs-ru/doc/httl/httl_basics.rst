.. httl_basics:


.. contents::


Основы HTTL
===========

HTTL это язык шаблонов подобный `Apache Velocity <http://velocity.apache.org>`  который
компилируется в быстрый исполняемый байт код.

Пример HTTL кода

.. code-block:: html

    #if(books)
        #for(Book book: books)
            <td>${book.title}</td>
        #end
    #end

По умолчанию в HTTL включены 6 директив: `#set, #if, #else, #for, #break, #macro`



Вывод результата выражений HTTL
-------------------------------

Формат::

    ${Expression}

Пример::

    ${User.name}

В данном случае результат выражений преобразуется в html код страницы так, чтобы он не был валидной `html` разметкой. Например
`<b>text</b>` как результат выражения преобразуется в `&lt;b&gt;text&lt;/b&gt;` .
Для того, чтобы отключить это преобразование используется конструкция `$!`::

  $!{Expression}

В этом случае разработчик шаблона должен быть уверен, что результат выражения `$!{Expression}` не вызовет проблем с безопасностью
при отображении страницы.


Установка переменных #set
-------------------------

Формат::

    #set(type name)
    #set(name = expression)
    #set(type name = expression)

Где `name` это имя переменной, `type` java тип переменной


Пример::

    #set(firstName = "John")
    #set(String lastName = "Doe")

В этом прмере переменная с именем  `firstName` должны быть определена выше по шаблону::

    #set(String firstName)


Условные выражения #if и #else
------------------------------

Формат::

    #if(expression)
    ...
    #end

Пример::

    #if(user.role == "admin")
        ...
    #else(user.role =="member")
        ... в противном случае если роль равна 'member'
    #else
        ... если ни то и ни другое, тогда выполняется этот блок
    #end

Каждый `#if` должен завершаться `#end` после набора опциональныйх `#else` директив.
